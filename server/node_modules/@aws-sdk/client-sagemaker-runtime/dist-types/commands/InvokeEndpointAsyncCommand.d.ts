import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { InvokeEndpointAsyncInput, InvokeEndpointAsyncOutput } from "../models/models_0";
import { SageMakerRuntimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../SageMakerRuntimeClient";
/**
 * The input for {@link InvokeEndpointAsyncCommand}.
 */
export interface InvokeEndpointAsyncCommandInput extends InvokeEndpointAsyncInput {
}
/**
 * The output of {@link InvokeEndpointAsyncCommand}.
 */
export interface InvokeEndpointAsyncCommandOutput extends InvokeEndpointAsyncOutput, __MetadataBearer {
}
/**
 * <p>After you deploy a model into production using Amazon SageMaker hosting services, your client
 *             applications use this API to get inferences from the model hosted at the specified
 *             endpoint in an asynchronous manner.</p>
 *          <p>Inference requests sent to this API are enqueued for asynchronous processing. The
 *             processing of the inference request may or may not complete before you receive a
 *             response from this API. The response from this API will not contain the result of the
 *             inference request but contain information about where you can locate it.</p>
 *          <p>Amazon SageMaker strips all <code>POST</code> headers except those supported by the API. Amazon SageMaker
 *             might add additional headers. You should not rely on the behavior of headers outside
 *             those enumerated in the request syntax.</p>
 *          <p>Calls to <code>InvokeEndpointAsync</code> are authenticated by using Amazon Web Services Signature Version 4. For information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html">Authenticating Requests (Amazon Web Services Signature Version 4)</a> in the
 *                 <i>Amazon S3 API Reference</i>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { SageMakerRuntimeClient, InvokeEndpointAsyncCommand } from "@aws-sdk/client-sagemaker-runtime"; // ES Modules import
 * // const { SageMakerRuntimeClient, InvokeEndpointAsyncCommand } = require("@aws-sdk/client-sagemaker-runtime"); // CommonJS import
 * const client = new SageMakerRuntimeClient(config);
 * const command = new InvokeEndpointAsyncCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link InvokeEndpointAsyncCommandInput} for command's `input` shape.
 * @see {@link InvokeEndpointAsyncCommandOutput} for command's `response` shape.
 * @see {@link SageMakerRuntimeClientResolvedConfig | config} for SageMakerRuntimeClient's `config` shape.
 *
 */
export declare class InvokeEndpointAsyncCommand extends $Command<InvokeEndpointAsyncCommandInput, InvokeEndpointAsyncCommandOutput, SageMakerRuntimeClientResolvedConfig> {
    readonly input: InvokeEndpointAsyncCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: InvokeEndpointAsyncCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SageMakerRuntimeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<InvokeEndpointAsyncCommandInput, InvokeEndpointAsyncCommandOutput>;
    private serialize;
    private deserialize;
}
